import React, { Component } from "react";
import { connect } from "react-redux";

import Services from "../../components/case/Services";

class View extends Component {
  constructor(props) {
    super(props);
    this.state = {};
  }

  cards = [
    {
      title: "Разработка",
      subTitle: "Самые качественные и передовые технологии",
      content: [
        {
          type: "text",
          content:
            "Мобильное приложение (front-end) - это то, с чем напрямую взаимодействуют пользователи, поэтому, мы используем самые качественные «нативные» технологии в разработке (high quality).",
        },
        {
          type: "text",
          content:
            "Модульная реализация с применением лучших архитектурных решений позволяет создавать нативные приложения стабильными и безопасными, легко масштабируемыми и экономически выгодными (долгосрочное качество без постоянных вмешательств программистов).",
        },
        {
          type: "text",
          content:
            "Серверная часть (back-end) - это внутреннее ядро онлайн-магазина, здесь мы применяем самый технологичный стек, позволяющий объединять в одну систему разные веб-сервисы и создавать свою современную CRM. И все это с потенциалом внедрения ИИ.",
        },
        {
          type: "text",
          content:
            "Очень широкий и профильный опыт (9 лет) в разработке онлайн-магазинов. Специалисты наивысшего уровня окажут более 20 услуг на всем цикле разработки. Итерационно и гибко.",
        },
        {
          type: "text",
          content:
            "<b>Создавали онлайн-магазины</b> для разных сфер деятельности доставок, продаж билетов и предоставления услуг",
        },
      ],
      info: {
        title: "Технологии, с которыми работаем",
        content: [
          {
            title: "Дизайн UX/UI:",
            content: "Figma, After Effects",
          },
          {
            title: "iOS:",
            content: "Swift, SwiftUI, Xcode",
          },
          {
            title: "Android:",
            content: "Kotlin, Android Studio",
          },
          {
            title: "Back-end:",
            content: "Python, Django, Docker, Swagger",
          },
          {
            title: "СУБД:",
            content: "PostgreSQL, SQLite, MongoDB",
          },
          {
            title: "Кроссплатформа:",
            content: "Flutter, Firebase",
          },
          {
            title: "Front-end:",
            content: "React, Redux, JSX, SCSS, Next.js, Gulp",
          },
          {
            title: "Тип и формат взаимодействия:",
            content: "REST API, JSON, SOAP",
          },
          {
            title: "Контроль достижения качества:",
            content: "Trello, GitLab, Telegram, Google Workspace",
          },
        ],
      },
    },
    {
      title: "Функционал",
      subTitle: "Возможности нативного приложения безграничны",
      content: [
        {
          type: "text",
          content:
            "Даже в рамках онлайн-магазина любая функция имеет ряд дополнительных возможностей которыми она может обладать, т.е. есть ствол (функции), ветки (возможности с логикой) и листья (дизайн).",
        },
        {
          type: "text",
          content:
            "Работа каждой функции интерпретируется под конкретный бизнес, т.к. у каждого бизнеса индивидуально выстроенные бизнес-процессы, уникальные отличия методов продаж, своё позиционирование с видением и целями, своя back-end инфраструктура.",
        },
        {
          type: "text",
          content:
            "Поэтому, на необходимый функционал в рамках конкретного бизнеса пишется индивидуальное ТЗ и осуществляется просчёт персональной сметы на все этапы работ, если реализация планируется по модели fix price, т.е. по фиксированной стоимости и сроку, а не на почасовой основе (сколько отработали, столько заплати).",
        },
      ],
      info: {
        title: "Популярные функции",
        content: [
          {
            title: "Онбординг:",
            content:
              "Загрузочный экран с анимацией, Экраны ознакомления (презентация), Подсказки на экранах",
          },
          {
            title: "Логин:",
            content:
              "Авторизация, Регистрация, Восстановление пароля, Apple In, Google In, СМС-сервис, Log Out",
          },
          {
            title: "Профиль пользователя:",
            content: "Аватарка, Имя, Почта, Телефон, Интересы",
          },
          {
            title: "Личный кабинет:",
            content:
              "Настройки, Редактирование профиля, Смена пароля, Политика конфиденциальности и условия использования",
          },
          {
            title: "Элементы магазина:",
            content:
              "Лента товаров/услуг, Каталог, Карточка товара/услуги, Корзина, Система оплаты (эквайринг), Карта (точки продаж), Доставка (добавление адреса), Геолокация, Маршруты, Фильтр, Поиск, Избранное, История (повторный заказ)",
          },
          {
            title: "Элементы программы лояльности:",
            content:
              "Акции, Скидки, Бонусы, Промокоды, Инвайты, Рейтинг, Отзывы",
          },
          {
            title: "Дополнительно:",
            content:
              "Чат, Push-уведомления, Deep link, Dark mod, Служба поддержки, Аналитика, Админ-панель (CRM), Персонализация (алгоритмы, машинное обучение), Повышенная безопасность, Повышенная нагрузка",
          },
        ],
      },
    },
    {
      title: "Админ-панель",
      subTitle: "Онлайн-магазин работает на клиент-серверном взаимодействии",
      content: [
        {
          type: "list",
          content: [
            "Интегрируем по предоставленному API",
            "Сделаем API к сайту или иному веб-сервису",
            "Создадим инфраструктуру из разных систем",
          ],
        },
        {
          type: "text",
          content:
            "Приложение общается с сайтом и сторонними системами, чтобы от туда загружать товары/услуги и обратно возвращать заказы, хранить базу пользователей, использовать программу лояльности, проводить оплату, показывать историю и т.д. Для этого необходимо API.",
        },
        {
          type: "text",
          content:
            "API создаётся после анализа используемых ИТ-решений, т.е. что является ядром back-end инфраструктуры, какая существующая структура их взаимодействия и какие применяются технологии.",
        },
        {
          type: "text",
          content:
            "После чего, определяется оптимальная связь с приложением и реализуется API интерфейс",
        },
      ],
      info: {
        title: "С чем часто работаем",
        content: [
          {
            title: "Сайты:",
            content: "Tilda, Битрикс24, Wordpress",
          },
          {
            title: "Системы:",
            content: "IIKO, 1C, r-keeper, Poster",
          },
          {
            title: "Платежная система (Эквайринг):",
            content:
              "CloudPayments (наш партнер), ЮKassa, PayKeeper, Тинькофф, Сбер",
          },
          {
            title: "Программа лояльности:",
            content: "IIKO, Poster, inCust, Premium Bonus",
          },
        ],
      },
    },
  ];

  render() {
    return <Services model={{ cards: this.cards }} />;
  }
}

function mapStateToProps() {
  return {};
}

export default connect(mapStateToProps)(View);
